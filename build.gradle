buildscript {
	ext {
		kotlinVersion = '1.2.61'
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

plugins {
    id "com.jfrog.bintray" version "1.8.4"
    id "maven-publish"
    id 'net.nemerosa.versioning' version '2.7.1'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

group = 'au.com.sealink'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

versioning {
    branchEnv = ['TRAVIS_BRANCH', 'TRAVIS_TAG', 'TRAVIS_PULL_REQUEST_BRANCH', 'GIT_BRANCH']
}

if(versioning.info.tag == null) {
    version = versioning.info.display
}
else {
    version = versioning.info.tag
}

repositories {
    maven { url "https://dl.bintray.com/sealink/maven" }
    mavenCentral()
}

bootJar {}
bootWar {
    excludeDevtools = false
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar, bootWar
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile group: 'org.springframework.data', name: 'spring-data-commons', version: '2.0.9.RELEASE'
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21"
	compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	compile "org.jetbrains.kotlin:kotlin-reflect"
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile 'au.com.sealink:printing:1.3.0'
	testCompile('org.springframework.boot:spring-boot-starter-test') {
		exclude module: 'junit'
	}
    testCompile("com.nhaarman:mockito-kotlin:1.5.0")
	testImplementation('org.junit.jupiter:junit-jupiter-api')
	testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}

def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "http://www.opensource.org/licenses/mit-license.php"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "jmortlock"
            name "John Mortlock"
            email "john.mortlock@sealink.com.au"
        }
    }

    scm {
        url "https://github.com/sealink/quickprint.git"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.web
            artifact sourcesJar {
                classifier "sources"
            }
            groupId 'au.com.sealink'
            artifactId 'quickprint'
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'SeaLink Printing Service')
                root.appendNode('name', 'SeaLink Printing Service')
                root.appendNode('url', 'https://github.com/sealink/quickprint')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    publications = ['mavenPublication']
    pkg {
        repo = 'maven'
        name = 'quickprint'
        userOrg = 'sealink'
        licenses = ['MIT']
        vcsUrl = "https://github.com/sealink/quickprint.git"
        version {
            name = project.version
            desc = project.version
            released  = new Date()
        }
    }
    publish = true
}